{"version":3,"sources":["TweetTemplate.js","TweetList.js","Tweet.js","index.js"],"names":["Tweettemplate","className","this","props","tweetedby","body","timestamp","React","Component","TweetList","tweetlist","tweets","map","tweet","key","Tweet","event","preventDefault","sendTweet","refs","tweetTextArea","value","onSubmit","bind","ref","Main","state","Date","toISOString","toUTCString","newTweet","unshift","toLocaleDateString","setState","addTweet","$","ReactDOM","render","document","getElementById"],"mappings":"mMAeeA,E,iLAXT,OACM,wBAAIC,UAAU,0BACV,uBAAGA,UAAU,6BAAb,cACA,0BAAMA,UAAU,SAASC,KAAKC,MAAMC,WACpC,2BAAIF,KAAKC,MAAME,MACf,2BAAIH,KAAKC,MAAMG,gB,GAPHC,IAAMC,WCenBC,E,iLAZP,IAAIC,EAAYR,KAAKC,MAAMQ,OAAOC,KAAI,SAAAC,GAAK,OAAI,kBAAC,EAAD,eAAeC,IAAKD,EAAMP,WAAeO,OAExF,OACI,6BACI,wBAAIZ,UAAU,cACTS,Q,GAPGF,aCuBTO,E,kLAvBDC,GACNA,EAAMC,iBACNf,KAAKC,MAAMe,UAAUhB,KAAKiB,KAAKC,cAAcC,OAC7CnB,KAAKiB,KAAKC,cAAcC,MAAQ,K,+BAIhC,OACI,yBAAKpB,UAAU,OACX,0BAAMqB,SAAUpB,KAAKgB,UAAUK,KAAKrB,OACpC,yBAAKD,UAAU,eACX,8BAAUuB,IAAI,gBAAgBvB,UAAU,yBACxC,oDACA,4BAAQA,UAAU,sCAAlB,YACa,uBAAGA,UAAU,wBAAb,gB,GAfbO,aCOdiB,E,YAKF,WAAYtB,GAAQ,IAAD,8BACf,4CAAMA,KAKDuB,MAAQ,CACTf,OAAQ,CACR,CACI,GAAM,EACN,KAAQ,QACR,KAAQ,0EACR,UAAa,QACb,WAAa,IAAIgB,MAAOC,eAE5B,CACI,GAAM,EACN,KAAQ,QACR,KAAQ,0EACR,UAAa,QACb,WAAa,IAAID,MAAOE,iBApBjB,E,sEAyBVhB,GACL,IAAIiB,EAAW5B,KAAKwB,MAAMf,OAC1BmB,EAASC,QAAQ,CACb,IAAM,IAAIJ,MAAOE,cAAe,KAAQ,QAAS,KAAQhB,EAAO,WAAa,IAAIc,MAAOK,qBAAsB,UAAa,UAG/H9B,KAAK+B,SAAS,CAACtB,OAAQmB,M,+BAIvB,OACI,yBAAK7B,UAAU,aACX,kBAAC,EAAD,CAAOiB,UAAWhB,KAAKgC,SAASX,KAAKrB,QACrC,kBAAC,EAAD,CAAWS,OAAQT,KAAKwB,MAAMf,c,GA3C3BJ,IAAMC,WAwDzB2B,KAPoB,WAChBC,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,a","file":"static/js/main.f253ebfc.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nclass Tweettemplate extends React.Component {\r\n    render(){\r\n      return(\r\n            <li className=\"collection-item avatar\">\r\n                <i className=\"material-icons circle red\">play_arrow</i>\r\n                <span className=\"title\">{this.props.tweetedby}</span>\r\n                <p>{this.props.body}</p>\r\n                <p>{this.props.timestamp}</p>\r\n            </li>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Tweettemplate;\r\n\r\n\r\n\r\n","import React, {Component} from 'react'\r\nimport Tweettemplate from './TweetTemplate'\r\n\r\nclass TweetList extends Component {\r\n    render() {\r\n        let tweetlist = this.props.tweets.map(tweet => <Tweettemplate key={tweet.timestamp} {...tweet} />);\r\n        //console.log(tweetlist);\r\n        return (\r\n            <div>\r\n                <ul className=\"collection\">\r\n                    {tweetlist}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TweetList;","import React, {Component} from 'react'\r\n\r\nclass Tweet extends Component {\r\n    sendTweet(event) {\r\n        event.preventDefault();\r\n        this.props.sendTweet(this.refs.tweetTextArea.value);\r\n        this.refs.tweetTextArea.value = '';\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <form onSubmit={this.sendTweet.bind(this)}>\r\n                <div className=\"input-field\">\r\n                    <textarea ref=\"tweetTextArea\" className=\"materialize-textarea\" />\r\n                    <label>How do you doing?</label>\r\n                    <button className=\"btn waves-effect waves-light right\">\r\n                        Tweet Now<i className=\"material-icons right\">send</i>\r\n                    </button>\r\n                </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tweet;","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport $ from 'jquery'\r\n//import Tweet from './Tweet'\r\nimport TweetList from './TweetList'\r\nimport Tweet from './Tweet';\r\n/* import { instanceOf } from 'prop-types';\r\nimport { Cookies } from 'react-cookie'; */\r\n\r\nclass Main extends React.Component {\r\n/*     static propTypes = {\r\n        cookies: instanceOf(Cookies).isRequired\r\n    }; */\r\n\r\n    constructor(props) {\r\n        super(props);\r\n/*         const {cookies} = props;\r\n        this.state = {\r\n            userId: cookies.get('session'),\r\n        }; */\r\n        this.state = {\r\n            tweets: [\r\n            {\r\n                'id': 1,\r\n                'name': 'guest',\r\n                'body': '\"Listen to your heart. It knows all things!\"- Paulo Coelho # Motivation',\r\n                'tweetedby': 'guest',\r\n                'timestamp': new Date().toISOString()\r\n            },\r\n            {\r\n                'id': 2,\r\n                'name': 'guest',\r\n                'body': '\"Listen to your heart. It knows all things!\"- Paulo Coelho # Motivation',\r\n                'tweetedby': 'guest',\r\n                'timestamp': new Date().toUTCString()\r\n            }]\r\n        }\r\n    }\r\n\r\n    addTweet(tweet) {\r\n        let newTweet = this.state.tweets;\r\n        newTweet.unshift({\r\n            'id': new Date().toUTCString(), 'name': 'guest', 'body': tweet, 'timestamp': new Date().toLocaleDateString(), 'tweetedby': 'guest'\r\n        });\r\n        //console.log(newTweet);\r\n        this.setState({tweets: newTweet});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Tweet sendTweet={this.addTweet.bind(this)} />\r\n                <TweetList tweets={this.state.tweets} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nlet documentReady = () => {\r\n    ReactDOM.render(\r\n        <Main />,\r\n        document.getElementById('root')\r\n    );\r\n};\r\n\r\n$(documentReady);"],"sourceRoot":""}